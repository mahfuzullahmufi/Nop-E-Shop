@model EmployeeSearchModel

@{
    //page title
    ViewBag.PageTitle = T("Plugins.Misc.Employee.List").Text;
}

<style>
    span.grid-report-item.gray {
        background-color: gray;
        color: #fff;
    }
</style>

<form asp-controller="Employee" asp-action="List" method="post" id="employees-form">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Plugins.Misc.Employee.List")
        </h1>
        <div class="float-right">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus-square"></i>
                @T("Admin.Common.AddNew")
            </a>
            <button type="button" id="delete-selected" name="delete-selected" class="btn btn-danger">
                <i class="far fa-trash-alt"></i>
                Delete
            </button>
            <nop-action-confirmation asp-button-id="delete-selected" />
        </div>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row search-row">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                            </div>
                            <div class="search-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchEmployeeName" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchEmployeeName" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchDesignation" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="SearchDesignation" asp-items="@Html.GetEnumSelectList<DesignationType>()" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchIsActiveId" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="SearchIsActiveId" asp-items="Model.AvailableActiveOpdions" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchJoiningDate" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchJoiningDate" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="text-center col-12">
                                        <button type="button" id="search-employee-list" class="btn btn-primary btn-search">
                                            <i class="fa fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card card-default">
                        <div class="card-body">
                            @await Html.PartialAsync("Table", new DataTablesModel
                       {
                           Name = "employee-grid",
                           UrlRead = new DataUrl("List", "Employee", null),
                           SearchButtonId = "search-employee-list",
                           Length = Model.PageSize,
                           LengthMenu = Model.AvailablePageSizes,
                           Filters = new List<FilterParameter>
                            {
                            new FilterParameter(nameof(Model.SearchEmployeeName)),
                            new FilterParameter(nameof(Model.SearchDesignation)),
                            new FilterParameter(nameof(Model.SearchIsActiveId)),
                            new FilterParameter(nameof(Model.SearchJoiningDate))
                            },
                           ColumnCollection = new List<ColumnProperty>
                            {
                            new ColumnProperty(nameof(EmployeeDetailsModel.Id))
                            {
                            IsMasterCheckBox = true,
                            Render = new RenderCheckBox("checkbox_employee"),
                            ClassName =  NopColumnClassDefaults.CenterAll,
                            Width = "10"
                            },
                            new ColumnProperty(nameof(EmployeeDetailsModel.PictureUrl))
                            {
                            Title = T("Admin.Catalog.Products.Fields.PictureThumbnailUrl").Text,
                            Width = "100",
                            Render = new RenderPicture(width: 100)
                            },
                            new ColumnProperty(nameof(EmployeeDetailsModel.Name))
                            {
                            Title = T("Plugins.Misc.Employee.List.SearchEmployeeName").Text,
                            Width = "20"
                            },
                            new ColumnProperty(nameof(EmployeeDetailsModel.EmployeeDesignationTitle))
                            {
                            Title = T("Plugins.Misc.Employee.List.SearchDesignation").Text,
                            Width = "10",
                            },
                            new ColumnProperty(nameof(EmployeeDetailsModel.IsActive))
                            {
                            Title = T("Plugins.Misc.Employee.Fields.IsActive").Text,
                            Width = "10",
                            ClassName = NopColumnClassDefaults.CenterAll,
                            Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(EmployeeDetailsModel.Salary))
                            {
                            Title = T("Plugins.Misc.Employee.Fields.Salary").Text,
                            Width = "20"
                            },
                            new ColumnProperty(nameof(EmployeeDetailsModel.JoiningDate))
                            {
                            Title = T("Plugins.Misc.Employee.List.SearchJoiningDate").Text,
                            Width = "20",
                            Render = new RenderDate(),
                            },
                            new ColumnProperty(nameof(EmployeeDetailsModel.Id))
                            {
                            Title = T("Admin.Common.Edit").Text,
                            Width = "10",
                            ClassName =  NopColumnClassDefaults.Button,
                            Render = new RenderButtonEdit(new DataUrl("Edit"))
                            }
                            }
                       })
                        </div>

                        <script>
                            function renderColumnEdit(data, type, row, meta) {
                                return '<button onclick=\"javascript:OpenWindow(\'@Url.Content("~/Admin/Employee/EmployeeStatusEditPopup/")' + data + '?btnId=btnRefresh&formId=employee-form\', 800, 550, true); return false;\" class="btn btn-default"><i class="fa fa-pencil"></i>@T("Admin.Common.Change.Status")</button>';
                            }
                        </script>
                        <script>
                            $(document).ready(function () {
                                //"delete selected" button
                                $("#delete-selected-action-confirmation-submit-button").bind("click", function () {
                                    var postData = {
                                        selectedIds: selectedIds
                                    };
                                    addAntiForgeryToken(postData);
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("DeleteSelected", "Employee"))",
                                        data: postData,
                                        traditional: true,
                                        error: function (jqXHR, textStatus, errorThrown) {
                                            showAlert('deleteSelectedFailed', errorThrown);
                                        },
                                        complete: function (jqXHR, textStatus) {
                                            if (jqXHR.status === 204) {
                                                showAlert('nothingSelectedAlert', '@T("Admin.Common.Alert.NothingSelected")');
                                                return;
                                            }
                                            updateTable('#employee-grid');
                                        }
                                    });
                                    $('#delete-selected-action-confirmation').modal('toggle');
                                    return false;
                                });
                            });
                        </script>
                        <div class="panel-footer">
                            <input type="submit" id="btnRefresh" style="display:none" />
                            <script>
                                $(document).ready(function () {
                                    $('#btnRefresh').click(function () {
                                        //refresh grid
                                        updateTable('#employee-grid');
                                        //return false to don't reload a page
                                        return false;
                                    });
                                });
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>
<nop-alert asp-alert-id="deleteSelectedFailed" />
<nop-alert asp-alert-id="nothingSelectedAlert" />